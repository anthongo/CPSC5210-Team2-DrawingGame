# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: buildTestSuite

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  DATABASE_URL: postgresql://postgres:postgres@localhost:5432/dribbbl
  auth0_domain: dev-ahjkm0k5e1e7ik74.us.auth0.com
  client_id: SHtECfwsr1cV0DznVVyoValV7QBkxAbf
  client_secret: hClEGpfL_qxQz2ZAP6Ss2hZHMifHMkwkDjYv30pcFEjlqdq2ruuQXBNDCQABnqBp
  
  POSTGRES_PASSWORD: postgres
  POSTGRES_USER: postgres
  POSTGRES_DB: dribbbl
  POSTGRES_HOST: localhost
  POSTGRES_PORT: 5432

permissions:
  contents: read

jobs:
  buildTestSuite:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
    - name: Populate database
      run: PGPASSWORD=$POSTGRES_PASSWORD psql -d $POSTGRES_DB -h $POSTGRES_HOST -U $POSTGRES_USER -f schema.sql
    - name: Set up Python 3.10
      uses: actions/setup-python@v3
      with:
        python-version: "3.10"
    - name: Setup pipenv
      run: |
        python -m pip install --upgrade pip
        pip install pipenv
        pipenv install --system --deploy
        pipenv install --dev --system --deploy
    - name: Install node
      uses: actions/setup-node@v4.0.2
    - name: Setup node
      run: npm ci
